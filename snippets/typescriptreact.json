{
  "Fragment": {
    "prefix": [
      "fragment"
    ],
    "body": [
      "<$1>",
      "\t$2",
      "</$1>"
    ],
    "description": "React Fragment"
  },
  "Metadata": {
    "prefix": [
      "metadata"
    ],
    "body": [
      "import type { Metadata } from 'next'",
      "",
      "export const metadata: Metadata = {",
      "\ttitle: '',",
      "\tdescription: '',",
      "}"
    ],
    "description": "React Fragment"
  },
  "Generate Metadata": {
    "prefix": [
      "nxgenmeta"
    ],
    "body": [
      "${TM_DIRECTORY}",
      "export ${2:async} function generateMetadata({ params }: { params: { ${1:array}: string } }) {",
      "\tconst posts = getSortedPostsData()",
      "\tconst { ${1:array} } = params",
      "\tconst post = posts.find(post => post.id === ${1:array})",
      "\tif (!post) {",
      "\t\treturn {",
      "\t\ttitle: 'Post Not Found'",
      "\t\t}",
      "\t}",
      "\treturn {",
      "\t\ttitle: post.title,",
      "\t}",
      "}"
    ],
    "description": "Generate a metadata for dynamic route"
  },
  "use client": {
    "prefix": "ucli",
    "body": [
      "'use client'"
    ],
    "description": "Add 'use client' directive"
  },
  "Add children props": {
    "prefix": "children",
    "body": [
      "{",
      "  children,",
      "}:{",
      "  children: React.ReactNode",
      "}"
    ],
    "description": "Create a React Function Component that will not be exported"
  },
  "React Function Component not exported": {
    "prefix": "rfcne",
    "body": [
      "function ${1:TM_FILENAME_BASE}({ $2 }) {",
      "  return (",
      "    <div>",
      "      $0",
      "    </div>",
      "  );",
      "};"
    ],
    "description": "Create a React Function Component that will not be exported"
  },
  "React Function Component": {
    "prefix": "rfc2",
    "body": [
      "export default function ${TM_DIRECTORY/^.+\\/(.*)$/${1:/pascalcase}/g}({ $2 }) {",
      "  return (",
      "    <div>",
      "      $0",
      "    </div>",
      "  );",
      "};"
    ],
    "description": "Create a React Function Component"
  },
  "Static Site Generation": {
    "prefix": "ssg",
    "body": [
      "export function generateStaticParams() {",
      "\tconst posts = getSortedPostsData()",
      "\treturn posts.map((post) => ({",
      "\t\tpostId: post.id",
      "\t}))",
      "}"
    ],
    "description": "Create a React Function Component"
  },
  "Arguments of useTransition": {
    "prefix": "useTransition",
    "body": [
      "const [isPending, startTransition] = "
    ],
    "description": "The basic array distructuring for useTransition"
  },
  "Next File Conventions: page.tsx": {
    "prefix": "nfcp",
    "body": [
      "export default function Page({",
      "  params,",
      "  searchParams,",
      "}: {",
      "  params: { slug: string }",
      "  searchParams: { [key: string]: string | string[] | undefined }",
      "}) {",
      "  return (",
      "    <h1>",
      "      ${1:My Page}",
      "    </h1>",
      "  )",
      "}"
    ],
    "description": "Create a React Function Component"
  },
  "console log": {
    "prefix": "cl",
    "body": [
      "console.log($1)"
    ],
    "description": "Basic console log"
  }
}
